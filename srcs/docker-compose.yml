version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres
    expose:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    networks:
      - backend
    restart: always

  # backend:
  #   container_name: backend
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.prod
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - backend
  #   env_file:
  #     - .env
  #   depends_on: 
  #     - bg-tasks
  #   restart: always

  # bg-tasks:
  #   container_name: bg-tasks
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.prod
  #   expose:
  #     - "8000:8000"
  #   networks:
  #     - backend
  #   env_file:
  #     - .env
  #   depends_on: 
  #     - db
  #     - redis
  #   restart: always
  #   entrypoint:
  #     - ./entry.sh
  #     - -b
  #     - "true"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - "8000:8000"
    networks:
      - backend
    env_file:
      - .env
    depends_on: 
      - db
      - redis
    restart: always
    entrypoint:
      - ./entry.sh
      - -b
      - "true"

  redis:
    container_name: redis
    image: redis
    networks:
      - backend
    expose:
      - 6379:6379
    restart: always
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - backend
    restart: always
  
  # pgAdmin:
  #   container_name: pgAdmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: $PGADMIN_EMAIL
  #     PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - backend
  #   restart: always

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana-oss
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - backend
  #   restart: always
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   user: "0:0"
  #   env_file:
  #     - .env
  #   environment:
  #     GF_DATABASE_TYPE: postgres
  #     GF_DATABASE_HOST: $DB_HOST:$DB_PORT
  #     GF_DATABASE_NAME: $DB_NAME
  #     GF_DATABASE_USER: $DB_USER
  #     GF_DATABASE_PASSWORD: $DB_PASSWORD
  #     GF_DATABASE_SSL_MODE: disable

  # vault:
  #   container_name: vault
  #   image: vault
  #   ports:
  #     - "8200:8200"
  #   networks:
  #     - backend
  #   restart: always
  #   volumes:
  #     - ./vault:/vault/file
  #   cap_add:
  #     - IPC_LOCK
    

volumes:
  pgdata:
    driver: local
  pwd:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: $PWD

  grafana_data:
    driver: local
      
networks:
  backend:
    driver: bridge
