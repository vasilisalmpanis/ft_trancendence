---
version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    networks:
      - backend
    restart: always
#  backend:
#    container_name: backend
#    build:
#      context: ./backend
#      args:
#        - DB_NAME=$DB_NAME
#        - DB_USER=$DB_USER
#        - DB_PASSWORD=$DB_PASSWORD
#        - DB_HOST=$DB_HOST
#        - DB_PORT=$DB_PORT
#        - DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
#    ports:
#      - "8000:8000"
#    networks:
#    - backend
#    env_file:
#      - .env
#    depends_on: 
#    - db
#    restart: always

  backend_dev:
    container_name: backend_dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    networks:
      - backend
    env_file:
      - .env
    depends_on: 
      - db
    restart: always
    volumes:
      - $PWD:/data
  
  pgAdmin:
    container_name: pgAdmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: example@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 12345
    ports:
      - "5050:80"
    networks:
      - backend
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    networks:
      - backend
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    user: "0:0"
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres:5432
      GF_DATABASE_NAME: postgres
      GF_DATABASE_USER: postgres
      GF_DATABASE_PASSWORD: postgres
      GF_DATABASE_SSL_MODE: disable

volumes:
  pgdata:
    driver: local
  grafana_data:
    driver: local
      
networks:
  backend:
    driver: bridge
